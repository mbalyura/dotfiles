{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"js console": {
		"scope": "javascript, typescript, vue, php, html",
		"prefix": "clg",
		"body": [
			"console.log('${1:!!!}')",
			"$2"
		],
		"description": "Log output to console"
	},

	"php tag": {
		// "scope": "php",
		"prefix": "php",
		"body": [
				"<?php $1 ?>"
		],
		"description": "Insert <?php ?>"
	},
	"php echo": {
		// "scope": "php",
		"prefix": "pe",
		"body": "<?= $1 ?>",
		"description": "Insert <?= ?>"
	},
	"php if": {
		// "scope": "php",
		"prefix": "pif",
		"body": "<?php if ($1) : ?>\n<?php endif; ?>",
		"description": "Insert <?php if?>"
	},
	"php if else": {
		// "scope": "php",
		"prefix": "pief",
		"body": "<?php if ($1) : ?>\n<?php else : ?>\n<?php endif; ?>",
		"description": "Insert <?php if else?>"
	},
	"php foreach": {
		// "scope": "php",
		"prefix": "pfor",
		"body": "<?php foreach ($1 as $2) : ?>\n<?php endforeach; ?>",
		"description": "Insert <?php foreach?>"
	},
	"php dd": {
		// "scope": "php",
		"prefix": "dd",
		"body": [
			"echo '<pre>';",
			"print_r($1);",
			"echo '</pre>';",
			"die();"
		],
		"description": "Dump and die"
	},

	"css not last": {
		"scope": "css, scss, sass",
		"prefix": "nlc",
		"body": "&:not(:last-child) {$1}",
		"description": "Print :not(:last-child)"
	},

	"css not first": {
		"scope": "css, scss, sass",
		"prefix": "nfc",
		"body": "&:not(:first-child) {$1}",
		"description": "Print :not(:first-child)"
	},
}
